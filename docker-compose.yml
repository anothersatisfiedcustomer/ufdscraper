services:
  ufdscraper:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3-slim
        WORKDIR /app
        RUN apt update && apt install -y pipenv python3-pip python3-setuptools python3-pip-whl python3-setuptools-whl python3-wheel-whl
    depends_on:
      - influxdb
    environment:
      - RUN_UFDSCRAPER=${RUN_UFDSCRAPER:-true}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - START_DATE=${START_DATE:-20250209}
      - END_DATE=${END_DATE:-20250209}
      - EXTRA_ARGUMENTS=${EXTRA_ARGUMENTS}
      - RUN_INFLUXDBLOADER=${RUN_INFLUXDBLOADER:-true}
      - INFLUXDB_HOST=${INFLUXDB_HOST:-influxdb}
      - INFLUXDB_PORT=${INFLUXDB_PORT:-8086}
      - INFLUXDB_USER=${INFLUXDB_USER:-root}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD:-root}
      - INFLUXDB_DATABASE=${INFLUXDB_DATABASE:-ufd}
      - INFLUXDB_SOURCE=${INFLUXDB_SOURCE:-ufd_01}
      - INFLUXDB_PATH=${INFLUXDB_PATH:-output}
      - INFLUXDB_RETENTION_POLICY=${INFLUXDB_RETENTION_POLICY}
      - INFLUXDB_LOADER_EXTRA_ARGUMENTS=${INFLUXDB_LOADER_EXTRA_ARGUMENTS}
    volumes:
      - ./:/app
    entrypoint:
      - /bin/bash
      - -c
      - |
        cd /app
        pipenv run pip install -r requirements.txt
        echo "Running UFD scrapper... $${RUN_UFDSCRAPER}"
        if [ "$${RUN_UFDSCRAPER}" == "true" ]; then
          pipenv run python ufdscraper/ufdscraper.py --start "$$START_DATE" --end "$$END_DATE" --dump-to-file $$EXTRA_ARGUMENTS
        fi
        echo "Running INFLUXDB loader... $${RUN_INFLUXDBLOADER}"
        if [ "$${RUN_INFLUXDBLOADER}" == "true" ]; then
          pipenv run python influxdbloader/influxdbloader.py --host "$$INFLUXDB_HOST" --port "$$INFLUXDB_PORT" \
          --database $$INFLUXDB_DATABASE \
          --source $$INFLUXDB_SOURCE \
          --path "$$INFLUXDB_PATH" \
          --retention-policy "$$INFLUXDB_RETENTION_POLICY" \
          $$INFLUXDB_LOADER_EXTRA_ARGUMENTS
        fi
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
  influxdb:
    image: influxdb:1.11
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=${INFLUXDB_DATABASE:-ufd}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
      - INFLUXDB_USER=${INFLUXDB_USER:-root}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_PASSWORD:-root}

volumes:
  influxdb-data:
  grafana-storage:
